#!/bin/bash

DEBUG="yes"

# locate the directory, where this script lives in
SCRIPT_NAME=$(basename "$0")
SCRIPT_PATH=$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)

EAP_MODULES=$(cd -P "${SCRIPT_PATH}/../modules"	2>/dev/null && pwd -P)
EAP_LOGS=$(cd -P "${SCRIPT_PATH}/../logs"	2>/dev/null && pwd -P)
EAP_SRC_ERLOTP=$(cd -P "${EAP_MODULES}/otp"	2>/dev/null && pwd -P)
EAP_SRC_ELIXIR=$(cd -P "${EAP_MODULES}/elixir"	2>/dev/null && pwd -P)

EAP_BASE="${HOME}/.eap"
# ${EAP_BASE}

# =====================================================================
# eap - Erlang Action Pack main script
# =====================================================================

function erre {
echo "Error: $*!" >&2
}

function action_usage {
cat <<EOT
usage: eap [ bootstrap | setup MODE | help ]
EOT
}

function action_help {
cat <<EOT
setup MODE: MODE in modules, erlang, elixir, eap
EOT
}

function action_setup_dependencies {
#sudo apt-get update
sudo apt-get install				\
	build-essential m4 flex bison		\
	libncurses5-dev libssl-dev unixodbc-dev	\
	libglu1-mesa-dev libwxgtk3.0-dev	\
	default-jdk xsltproc fop libxml2-utils
}

function action_setup_modules {
git submodule init
git submodule update
}

function action_setup_erlang {
if [ ! -d "${EAP_SRC_ERLOTP}" ] ; then
	erre "can not change to Erlang/OTP source directory"
	exit 1
fi

echo "Setup Erlang/OTP:"

pushd "${EAP_SRC_ERLOTP}"

LANG="C"
ERL_TOP=$(pwd)
PREFIX="${EAP_BASE}"

(
	git reset --hard

	"./otp_build" save_bootstrap
	"./otp_build" autoconf
	"./otp_build" configure --prefix="${PREFIX}"

	for ACT in "all" "install" "clean"
	do
		make ${ACT}
	done

	PATH="${PREFIX}/bin:${ERL_TOP}/bin:${PATH}"

	"./otp_build" remove_prebuilt_files
	"./otp_build" autoconf
	"./otp_build" configure --prefix="${PREFIX}"

	for ACT in "all" "install" "docs" "install-docs" "clean"
	do
		make ${ACT}
	done

	git reset --hard

) 2>&1 | tee "${EAP_LOGS}/setup-erlang-otp.log"

popd
}

function action_setup_elixir {
if [ ! -d "${EAP_SRC_ELIXIR}" ] ; then
	erre "can not change to Elixir source directory"
	exit 1
fi

echo "Setup Elixir:"

pushd "${EAP_SRC_ELIXIR}"

PREFIX="${EAP_BASE}"
PATH="${PREFIX}/bin:${PATH}"

(
	git reset --hard
	
	#for ACT in "clean" "test"
	for ACT in "clean" "test" "PREFIX=${PREFIX} install"
	do
		make ${ACT}
	done

	cd "../ex_doc" && ../elixir/bin/mix do deps.get, compile && cd "../elixir" && make "docs"
	
	#for ACT in "PREFIX=${PREFIX} install" "clean"
	for ACT in "clean"
	do
		make ${ACT}
	done

	git reset --hard
	
) 2>&1 | tee "${EAP_LOGS}/setup-elixir.log"

popd
}

function action_setup_eap {

EAP_ETC="${EAP_BASE}/etc"

if [ ! -d "${EAP_ETC}" ] ; then
	mkdir -p "${EAP_ETC}"
fi

EAP_ENV="${EAP_ETC}/environment"

( cat | tee "${EAP_ENV}" ) <<EOT
# ---------------------------------------------------------------------
# Erlang Action Pack environment: source me!
# > source "${EAP_ENV}"
# ---------------------------------------------------------------------

if [ -z $(echo ${PATH} | grep "${HOME}/.eap/bin") ] ; then
	PATH="${HOME}/.eap/bin:${PATH}"
fi

if [ -z "${MANPATH}" ]
then
	MANPATH="${HOME}/.eap/lib/erlang/man:/usr/share/man:/usr/local/share/man"
else
	MANPATH="${HOME}/.eap/lib/erlang/man:${MANPATH}"
fi

export PATH MANPATH

# ---------------------------------------------------------------------
# End Of File
# ---------------------------------------------------------------------
EOT

}

function action_setup {
MODE="$1"
case ${MODE} in
"dependencies")
	shift
	action_setup_dependencies $*
	;;
"modules")
	shift
	action_setup_modules $*
	;;
"erlang")
	shift
	action_setup_erlang $*
	;;
"elixir")
	shift
	action_setup_elixir $*
	;;
"eap")
	shift
	action_setup_eap $*
	;;
*)
	erre "unknown setup option \"${MODE}\""
	exit 1
	;;
esac
}

function action_bootstrap {

$0 setup dependencies
$0 setup modules
$0 setup erlang
$0 setup eap

source "${HOME}/.eap/etc/environment"

$0 setup elixir

}

# =====================================================================
# main entry point
# =====================================================================

ARG1="$1"

case ${ARG1} in
"setup")
	shift
	action_setup $*
	;;
"bootstrap")
	action_bootstrap
	;;
"help"|"-h"|"--help")
	action_help
	;;
*)
	action_usage
	exit 1
	;;
esac

exit 0

# #####################################################################
# End Of File
# #####################################################################
